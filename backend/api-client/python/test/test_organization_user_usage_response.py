# coding: utf-8

"""
    Lattice

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.organization_user_usage_response import OrganizationUserUsageResponse

class TestOrganizationUserUsageResponse(unittest.TestCase):
    """OrganizationUserUsageResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OrganizationUserUsageResponse:
        """Test OrganizationUserUsageResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OrganizationUserUsageResponse`
        """
        model = OrganizationUserUsageResponse()
        if include_optional:
            return OrganizationUserUsageResponse(
                organization_id = '',
                period_start = '',
                period_end = '',
                quota_per_user = 1.337,
                total_users = 56,
                total_organization_usage = 1.337,
                user_breakdown = [
                    openapi_client.models.user_usage_breakdown.UserUsageBreakdown(
                        user_id = '', 
                        user_email = '', 
                        user_name = '', 
                        gpu_hours_used = 1.337, 
                        gpu_hours_limit = 1.337, 
                        gpu_hours_remaining = 1.337, 
                        usage_percentage = 1.337, )
                    ]
            )
        else:
            return OrganizationUserUsageResponse(
                organization_id = '',
                period_start = '',
                period_end = '',
                quota_per_user = 1.337,
                total_users = 56,
                total_organization_usage = 1.337,
                user_breakdown = [
                    openapi_client.models.user_usage_breakdown.UserUsageBreakdown(
                        user_id = '', 
                        user_email = '', 
                        user_name = '', 
                        gpu_hours_used = 1.337, 
                        gpu_hours_limit = 1.337, 
                        gpu_hours_remaining = 1.337, 
                        usage_percentage = 1.337, )
                    ],
        )
        """

    def testOrganizationUserUsageResponse(self):
        """Test OrganizationUserUsageResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
