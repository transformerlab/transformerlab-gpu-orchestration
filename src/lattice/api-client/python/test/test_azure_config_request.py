# coding: utf-8

"""
    Lattice

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.azure_config_request import AzureConfigRequest

class TestAzureConfigRequest(unittest.TestCase):
    """AzureConfigRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AzureConfigRequest:
        """Test AzureConfigRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AzureConfigRequest`
        """
        model = AzureConfigRequest()
        if include_optional:
            return AzureConfigRequest(
                name = '',
                subscription_id = '',
                tenant_id = '',
                client_id = '',
                client_secret = '',
                allowed_instance_types = [
                    ''
                    ],
                allowed_regions = [
                    ''
                    ],
                max_instances = 56,
                config_key = ''
            )
        else:
            return AzureConfigRequest(
                name = '',
                subscription_id = '',
                tenant_id = '',
                client_id = '',
                client_secret = '',
                allowed_instance_types = [
                    ''
                    ],
                allowed_regions = [
                    ''
                    ],
        )
        """

    def testAzureConfigRequest(self):
        """Test AzureConfigRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
