"""remove_foreign_key_constraints

Revision ID: 37d8fdf0dd39
Revises: ba3ecb1d8950
Create Date: 2025-08-28 10:52:44.244998

"""
from typing import Sequence, Union

from alembic import op


# revision identifiers, used by Alembic.
revision: str = '37d8fdf0dd39'
down_revision: Union[str, Sequence[str], None] = 'ba3ecb1d8950'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # For SQLite, we need to recreate the tables without foreign key constraints
    # This is a more complex operation that requires recreating the tables
    
    # Drop and recreate team_memberships table without foreign key
    op.execute("""
        CREATE TABLE team_memberships_new (
            id VARCHAR NOT NULL, 
            team_id VARCHAR NOT NULL, 
            user_id VARCHAR NOT NULL, 
            organization_id VARCHAR NOT NULL, 
            created_at DATETIME, 
            PRIMARY KEY (id), 
            UNIQUE (organization_id, user_id)
        )
    """)
    
    op.execute("""
        INSERT INTO team_memberships_new 
        SELECT id, team_id, user_id, organization_id, created_at 
        FROM team_memberships
    """)
    
    op.execute("DROP TABLE team_memberships")
    op.execute("ALTER TABLE team_memberships_new RENAME TO team_memberships")
    
    # Drop and recreate team_quotas table without foreign key
    op.execute("""
        CREATE TABLE team_quotas_new (
            id VARCHAR NOT NULL, 
            organization_id VARCHAR NOT NULL, 
            team_id VARCHAR NOT NULL, 
            monthly_credits_per_user FLOAT NOT NULL, 
            created_at DATETIME, 
            updated_at DATETIME, 
            PRIMARY KEY (id), 
            UNIQUE (organization_id, team_id)
        )
    """)
    
    op.execute("""
        INSERT INTO team_quotas_new 
        SELECT id, organization_id, team_id, monthly_credits_per_user, created_at, updated_at 
        FROM team_quotas
    """)
    
    op.execute("DROP TABLE team_quotas")
    op.execute("ALTER TABLE team_quotas_new RENAME TO team_quotas")

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Recreate tables with foreign key constraints for downgrade
    
    # Recreate team_memberships table with foreign key
    op.execute("""
        CREATE TABLE team_memberships_old (
            id VARCHAR NOT NULL, 
            team_id VARCHAR NOT NULL, 
            user_id VARCHAR NOT NULL, 
            organization_id VARCHAR NOT NULL, 
            created_at DATETIME, 
            PRIMARY KEY (id), 
            UNIQUE (organization_id, user_id),
            FOREIGN KEY (team_id) REFERENCES teams (id) ON DELETE CASCADE
        )
    """)
    
    op.execute("""
        INSERT INTO team_memberships_old 
        SELECT id, team_id, user_id, organization_id, created_at 
        FROM team_memberships
    """)
    
    op.execute("DROP TABLE team_memberships")
    op.execute("ALTER TABLE team_memberships_old RENAME TO team_memberships")
    
    # Recreate team_quotas table with foreign key
    op.execute("""
        CREATE TABLE team_quotas_old (
            id VARCHAR NOT NULL, 
            organization_id VARCHAR NOT NULL, 
            team_id VARCHAR NOT NULL, 
            monthly_credits_per_user FLOAT NOT NULL, 
            created_at DATETIME, 
            updated_at DATETIME, 
            PRIMARY KEY (id), 
            UNIQUE (organization_id, team_id),
            FOREIGN KEY (team_id) REFERENCES teams (id) ON DELETE CASCADE
        )
    """)
    
    op.execute("""
        INSERT INTO team_quotas_old 
        SELECT id, organization_id, team_id, monthly_credits_per_user, created_at, updated_at 
        FROM team_quotas
    """)
    
    op.execute("DROP TABLE team_quotas")
    op.execute("ALTER TABLE team_quotas_old RENAME TO team_quotas")

    # ### end Alembic commands ###
