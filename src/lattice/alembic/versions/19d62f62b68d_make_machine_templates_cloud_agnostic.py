"""make_machine_templates_cloud_agnostic

Revision ID: 19d62f62b68d
Revises: f5671b25e20c
Create Date: 2025-09-10 14:19:41.945931

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '19d62f62b68d'
down_revision: Union[str, Sequence[str], None] = 'f5671b25e20c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('machine_size_templates', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_mst_org_cloud'))
        batch_op.drop_constraint(batch_op.f('uq_mst_org_cloud_name_key'), type_='unique')
        batch_op.create_index('ix_mst_org', ['organization_id'], unique=False)
        batch_op.create_unique_constraint('uq_mst_org_name', ['organization_id', 'name'])
        batch_op.drop_column('cloud_identifier')
        batch_op.drop_column('cloud_type')

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('machine_size_templates', schema=None) as batch_op:
        batch_op.add_column(sa.Column('cloud_type', sa.VARCHAR(), nullable=False))
        batch_op.add_column(sa.Column('cloud_identifier', sa.VARCHAR(), nullable=True))
        batch_op.drop_constraint('uq_mst_org_name', type_='unique')
        batch_op.drop_index('ix_mst_org')
        batch_op.create_unique_constraint(batch_op.f('uq_mst_org_cloud_name_key'), ['organization_id', 'cloud_type', 'name', 'cloud_identifier'])
        batch_op.create_index(batch_op.f('ix_mst_org_cloud'), ['organization_id', 'cloud_type'], unique=False)

    # ### end Alembic commands ###
